<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<ndbx formatVersion="17" type="file" uuid="6c7a253b-6dc0-43e2-bb60-a0b18aee2edf">
    <property name="canvasHeight" value="1000"/>
    <property name="canvasWidth" value="1000"/>
    <node name="root" prototype="core.network" renderedChild="LFS_LOG">
        <node name="IMPORT_CSV" position="7.00,-7.00" prototype="corevector.null"/>
        <node name="IMPORT_CSV1" position="51.00,-7.00" prototype="corevector.null"/>
        <node name="LFS_LOG" position="51.00,10.00" prototype="core.network" renderedChild="OUT1">
            <node name="LOG_IN1" position="46.00,4.00" prototype="corevector.null"/>
            <node name="LOG_OUT_FLOAT1" position="42.00,21.00" prototype="corevector.null"/>
            <node name="OUT1" position="46.00,34.00" prototype="corevector.null"/>
            <node name="OUT_Log1" position="36.00,21.00" prototype="corevector.null"/>
            <node name="OUT_Log_Premultiply1" position="39.00,21.00" prototype="corevector.null"/>
            <node name="add2" position="47.00,17.00" prototype="math.add">
                <port name="value2" type="float" value="-207.0"/>
            </node>
            <node name="first3" position="48.00,11.00" prototype="list.first"/>
            <node comment="Oblicza naturalną wartośc logarytmiczną" name="log2" position="47.00,6.00" prototype="math.log"/>
            <node name="make_point4" position="57.00,19.00" prototype="corevector.make_point"/>
            <node name="make_point5" position="49.00,19.00" prototype="corevector.make_point"/>
            <node name="make_point6" position="53.00,19.00" prototype="corevector.make_point"/>
            <node name="multiply2" position="54.00,16.00" prototype="math.multiply">
                <port name="value2" type="float" value="-1.0"/>
            </node>
            <node name="multiply6" position="47.00,7.00" prototype="math.multiply">
                <port name="value2" type="float" value="258.0"/>
            </node>
            <node comment="monozy prze -1 ( INVERT )" name="multiply7" position="48.00,15.00" prototype="math.multiply">
                <port name="value2" type="float" value="-1.0"/>
            </node>
            <node comment="monozy przez 0.5" name="multiply8" position="48.00,13.00" prototype="math.multiply">
                <port name="value2" type="float" value="0.5"/>
            </node>
            <node name="switch5" position="49.00,27.00" prototype="list.switch">
                <port name="index" type="int" value="2"/>
            </node>
            <node name="switch6" position="43.00,27.00" prototype="list.switch">
                <port name="index" type="int" value="2"/>
            </node>
            <node name="switch8" position="46.00,31.00" prototype="list.switch">
                <port name="index" type="int" value="1"/>
            </node>
            <port childReference="LOG_IN1.shape" description="The input shape." label="" name="shape" range="value" type="geometry" widget="none"/>
            <port childReference="multiply6.value2" description="" label="Log Multiply" name="value2" range="value" type="float" value="258.0" widget="float"/>
            <port childReference="switch5.index" description="The index of the input list to select. If the index is greater than the number of inputs, it wraps around." label="P point x/y/xy" max="2.0" min="0.0" name="index_1" range="value" type="int" value="2" widget="int"/>
            <port childReference="switch6.index" description="The index of the input list to select. If the index is greater than the number of inputs, it wraps around." label="S Log   0/1   0/X" max="2.0" min="0.0" name="index_2" range="value" type="int" value="2" widget="int"/>
            <port childReference="switch8.index" description="The index of the input list to select. If the index is greater than the number of inputs, it wraps around." label="String/Point" max="1.0" min="0.0" name="index_3" range="value" type="int" value="1" widget="int"/>
            <conn input="multiply6.value1" output="log2"/>
            <conn input="multiply7.value1" output="multiply8"/>
            <conn input="add2.value1" output="multiply6"/>
            <conn input="log2.value" output="LOG_IN1"/>
            <conn input="OUT_Log_Premultiply1.shape" output="multiply6"/>
            <conn input="OUT_Log1.shape" output="log2"/>
            <conn input="add2.value2" output="multiply7"/>
            <conn input="first3.list" output="multiply6"/>
            <conn input="LOG_OUT_FLOAT1.shape" output="add2"/>
            <conn input="make_point5.x" output="add2"/>
            <conn input="switch5.input1" output="make_point5"/>
            <conn input="switch5.input2" output="make_point6"/>
            <conn input="switch5.input3" output="make_point4"/>
            <conn input="multiply2.value1" output="add2"/>
            <conn input="make_point6.y" output="multiply2"/>
            <conn input="make_point4.y" output="multiply2"/>
            <conn input="make_point4.x" output="add2"/>
            <conn input="switch6.input1" output="OUT_Log1"/>
            <conn input="switch6.input2" output="OUT_Log_Premultiply1"/>
            <conn input="switch6.input3" output="LOG_OUT_FLOAT1"/>
            <conn input="switch8.input1" output="switch6"/>
            <conn input="switch8.input2" output="switch5"/>
            <conn input="switch8.input3" output="LOG_IN1"/>
            <conn input="multiply8.value1" output="first3"/>
            <conn input="OUT1.shape" output="switch8"/>
        </node>
        <node name="LOG_IN" position="7.00,7.00" prototype="corevector.null"/>
        <node name="LOG_MULTI" position="16.00,1.00" prototype="corevector.null"/>
        <node name="LOG_MULTI1" position="54.00,3.00" prototype="corevector.null"/>
        <node name="LOG_OUT_FLOAT" position="1.00,23.00" prototype="corevector.null"/>
        <node name="LOG_OUT_POINT" position="9.00,26.00" prototype="corevector.null"/>
        <node name="Log_offset_triget" position="20.00,1.00" prototype="corevector.null"/>
        <node name="LookUp_String" position="12.00,-7.00" prototype="corevector.null"/>
        <node name="LookUp_String1" position="56.00,-7.00" prototype="corevector.null"/>
        <node name="OUT" position="5.00,33.00" prototype="corevector.null"/>
        <node name="OUT_Log" position="-3.00,17.00" prototype="corevector.null"/>
        <node name="OUT_Log_Premultiply" position="0.00,17.00" prototype="corevector.null"/>
        <node name="POINT" position="26.00,1.00" prototype="corevector.null"/>
        <node name="POINT1" position="58.00,2.00" prototype="corevector.null"/>
        <node name="STRING" position="30.00,1.00" prototype="corevector.null"/>
        <node name="STRING1" position="62.00,3.00" prototype="corevector.null"/>
        <node name="STRIN_POINT" position="34.00,1.00" prototype="corevector.null"/>
        <node name="STRIN_POINT1" position="66.00,5.00" prototype="corevector.null"/>
        <node name="abs3" position="16.00,-1.00" prototype="math.abs">
            <port name="value" type="float" value="67.0"/>
        </node>
        <node name="abs4" position="54.00,1.00" prototype="math.abs">
            <port name="value" type="float" value="67.0"/>
        </node>
        <node name="add1" position="7.00,19.00" prototype="math.add">
            <port name="value2" type="float" value="-207.0"/>
        </node>
        <node comment="Usuwanie duplikatow" name="distinct5" position="7.00,-3.00" prototype="list.distinct"/>
        <node comment="Usuwanie duplikatow" name="distinct6" position="51.00,-3.00" prototype="list.distinct"/>
        <node comment="wybiera wartoąc z początku listy uzyskujemy wartośc ofsetu w osi x" name="first2" position="10.00,11.00" prototype="list.first"/>
        <node comment="inportoiwac tylko skonvertowane .dat do .csv z delimiterem &quot; , &quot; i z podanymi nazwami kolumn" name="import_csv4" position="7.00,-9.00" prototype="data.import_csv">
            <port name="file" type="string" value="/home/pab/_PRO/LFS/data/goal_1.csv"/>
        </node>
        <node comment="inportoiwac tylko skonvertowane .dat do .csv z delimiterem &quot; , &quot; i z podanymi nazwami kolumn" name="import_csv5" position="51.00,-9.00" prototype="data.import_csv">
            <port name="file" type="string" value="/home/pab/_PRO/LFS/data/goal_1.csv"/>
        </node>
        <node name="integer1" position="20.00,-1.00" prototype="math.integer"/>
        <node name="integer2" position="26.00,-1.00" prototype="math.integer">
            <port name="value" type="int" value="4"/>
        </node>
        <node name="integer3" position="30.00,-1.00" prototype="math.integer">
            <port name="value" type="int" value="2"/>
        </node>
        <node name="integer4" position="34.00,-1.00" prototype="math.integer">
            <port name="value" type="int" value="2"/>
        </node>
        <node name="integer6" position="66.00,3.00" prototype="math.integer">
            <port name="value" type="int" value="2"/>
        </node>
        <node name="integer7" position="62.00,1.00" prototype="math.integer">
            <port name="value" type="int" value="2"/>
        </node>
        <node name="integer8" position="58.00,0.00" prototype="math.integer">
            <port name="value" type="int" value="4"/>
        </node>
        <node comment="Oblicza naturalną wartośc logarytmiczną" name="log1" position="7.00,8.00" prototype="math.log"/>
        <node comment="LookUp wybiera kolumne o nazwie Size" name="lookup4" position="7.00,-4.00" prototype="data.lookup">
            <port name="key" type="string" value="size"/>
        </node>
        <node comment="LookUp wybiera kolumne o nazwie Size" name="lookup5" position="51.00,-4.00" prototype="data.lookup">
            <port name="key" type="string" value="size"/>
        </node>
        <node name="make_point1" position="9.00,21.00" prototype="corevector.make_point"/>
        <node name="make_point2" position="13.00,21.00" prototype="corevector.make_point"/>
        <node name="make_point3" position="17.00,21.00" prototype="corevector.make_point"/>
        <node name="multiply1" position="14.00,18.00" prototype="math.multiply">
            <port name="value2" type="float" value="-1.0"/>
        </node>
        <node name="multiply3" position="7.00,9.00" prototype="math.multiply">
            <port name="value2" type="float" value="183.28997802734375"/>
        </node>
        <node comment="monozy prze -1 ( INVERT )" name="multiply4" position="8.00,17.00" prototype="math.multiply">
            <port name="value2" type="float" value="-1.0"/>
        </node>
        <node comment="monozy przez 0.5" name="multiply5" position="8.00,16.00" prototype="math.multiply">
            <port name="value2" type="float" value="0.5"/>
        </node>
        <node name="string1" position="12.00,-9.00" prototype="string.string">
            <port name="value" type="string" value="size"/>
        </node>
        <node name="string2" position="56.00,-9.00" prototype="string.string">
            <port name="value" type="string" value="size"/>
        </node>
        <node name="switch1" position="10.00,14.00" prototype="list.switch"/>
        <node name="switch2" position="9.00,24.00" prototype="list.switch"/>
        <node name="switch3" position="-3.00,27.00" prototype="list.switch"/>
        <node name="switch4" position="5.00,31.00" prototype="list.switch"/>
        <conn input="multiply3.value1" output="log1"/>
        <conn input="multiply4.value1" output="multiply5"/>
        <conn input="distinct5.list" output="lookup4"/>
        <conn input="add1.value1" output="multiply3"/>
        <conn input="IMPORT_CSV.shape" output="import_csv4"/>
        <conn input="lookup4.list" output="IMPORT_CSV"/>
        <conn input="LOG_IN.shape" output="distinct5"/>
        <conn input="log1.value" output="LOG_IN"/>
        <conn input="multiply3.value2" output="LOG_MULTI"/>
        <conn input="LOG_MULTI.shape" output="abs3"/>
        <conn input="LookUp_String.shape" output="string1"/>
        <conn input="lookup4.key" output="LookUp_String"/>
        <conn input="OUT_Log_Premultiply.shape" output="multiply3"/>
        <conn input="OUT_Log.shape" output="log1"/>
        <conn input="add1.value2" output="multiply4"/>
        <conn input="first2.list" output="multiply3"/>
        <conn input="multiply5.value1" output="switch1"/>
        <conn input="switch1.input1" output="multiply3"/>
        <conn input="switch1.input2" output="first2"/>
        <conn input="Log_offset_triget.shape" output="integer1"/>
        <conn input="switch1.index" output="Log_offset_triget"/>
        <conn input="LOG_OUT_FLOAT.shape" output="add1"/>
        <conn input="make_point1.x" output="add1"/>
        <conn input="LOG_OUT_POINT.shape" output="switch2"/>
        <conn input="switch2.input1" output="make_point1"/>
        <conn input="switch2.input2" output="make_point2"/>
        <conn input="switch2.input3" output="make_point3"/>
        <conn input="multiply1.value1" output="add1"/>
        <conn input="make_point2.y" output="multiply1"/>
        <conn input="make_point3.y" output="multiply1"/>
        <conn input="make_point3.x" output="add1"/>
        <conn input="switch3.input1" output="OUT_Log"/>
        <conn input="switch3.input2" output="OUT_Log_Premultiply"/>
        <conn input="switch3.input3" output="LOG_OUT_FLOAT"/>
        <conn input="switch4.input1" output="switch3"/>
        <conn input="switch4.input2" output="LOG_OUT_POINT"/>
        <conn input="OUT.shape" output="switch4"/>
        <conn input="STRING.shape" output="integer3"/>
        <conn input="switch3.index" output="STRING"/>
        <conn input="POINT.shape" output="integer2"/>
        <conn input="switch2.index" output="POINT"/>
        <conn input="STRIN_POINT.shape" output="integer4"/>
        <conn input="switch4.input3" output="STRIN_POINT"/>
        <conn input="distinct6.list" output="lookup5"/>
        <conn input="IMPORT_CSV1.shape" output="import_csv5"/>
        <conn input="lookup5.list" output="IMPORT_CSV1"/>
        <conn input="LOG_MULTI1.shape" output="abs4"/>
        <conn input="LookUp_String1.shape" output="string2"/>
        <conn input="lookup5.key" output="LookUp_String1"/>
        <conn input="STRING1.shape" output="integer7"/>
        <conn input="POINT1.shape" output="integer8"/>
        <conn input="STRIN_POINT1.shape" output="integer6"/>
        <conn input="LFS_LOG.shape" output="distinct6"/>
    </node>
</ndbx>
