<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<ndbx formatVersion="17" type="file" uuid="58d08a76-7e95-462a-b7d4-1b4d19b8b859">
    <property name="canvasHeight" value="1000"/>
    <property name="canvasWidth" value="1000"/>
    <node name="root" prototype="core.network" renderedChild="combine6">
        <node comment="wielkość ellipsy" name="Ellipse_Size" position="-45.00,13.00" prototype="math.abs">
            <port name="value" type="float" value="9.0"/>
        </node>
        <node name="IN_Curve" position="-48.00,-1.00" prototype="corevector.null"/>
        <node name="IN_Wy_Size" position="-38.00,-1.00" prototype="corevector.null"/>
        <node name="LookUpSize" position="-48.00,10.00" prototype="data.lookup">
            <port name="key" type="string" value="size"/>
        </node>
        <node name="LookUpSize1" position="-44.00,2.00" prototype="data.lookup">
            <port name="key" type="string" value="size"/>
        </node>
        <node name="LookUpSize2" position="-38.00,2.00" prototype="data.lookup">
            <port name="key" type="string" value="size"/>
        </node>
        <node name="LookUpTime" position="-45.00,10.00" prototype="data.lookup">
            <port name="key" type="string" value="time"/>
        </node>
        <node name="LookUpTime1" position="-47.00,2.00" prototype="data.lookup">
            <port name="key" type="string" value="time"/>
        </node>
        <node name="LookUpTime2" position="-32.00,-1.00" prototype="data.lookup">
            <port name="key" type="string" value="time"/>
        </node>
        <node name="OUT_Wy_Size" position="-38.00,20.00" prototype="corevector.null"/>
        <node name="OUT_curve" position="-48.00,20.00" prototype="corevector.null"/>
        <node name="abs1" position="-7.00,19.00" prototype="math.abs">
            <port name="value" type="float" value="20.0"/>
        </node>
        <node name="colorize1" position="-8.00,23.00" prototype="corevector.colorize">
            <port name="fill" type="color" value="#00000000"/>
            <port name="strokeWidth" type="float" value="1.0"/>
        </node>
        <node name="combine1" position="10.00,17.00" prototype="list.combine"/>
        <node name="combine2" position="-14.00,26.00" prototype="list.combine"/>
        <node name="combine3" position="-14.00,29.00" prototype="list.combine"/>
        <node name="combine4" position="-48.00,18.00" prototype="list.combine"/>
        <node name="combine5" position="-38.00,15.00" prototype="list.combine"/>
        <node name="combine6" position="-43.00,23.00" prototype="list.combine"/>
        <node name="connect1" position="12.00,12.00" prototype="corevector.connect"/>
        <node name="connect2" position="-48.00,15.00" prototype="corevector.connect">
            <port name="closed" type="boolean" value="false"/>
        </node>
        <node name="connect3" position="-12.00,21.00" prototype="corevector.connect"/>
        <node name="connect4" position="16.00,13.00" prototype="corevector.connect"/>
        <node name="connect5" position="-38.00,9.00" prototype="corevector.connect"/>
        <node name="count1" position="-44.00,4.00" prototype="list.count"/>
        <node name="count2" position="-47.00,4.00" prototype="list.count"/>
        <node name="distinct1" position="8.00,5.00" prototype="list.distinct"/>
        <node name="distinct2" position="-16.00,0.00" prototype="list.distinct"/>
        <node name="distinct3" position="-44.00,3.00" prototype="list.distinct"/>
        <node name="distinct4" position="-38.00,3.00" prototype="list.distinct"/>
        <node name="divide1" position="-47.00,6.00" prototype="math.divide"/>
        <node position="-45.00,15.00" prototype="corevector.ellipse"/>
        <node name="ellipse1" position="17.00,14.00" prototype="corevector.ellipse">
            <port name="width" type="float" value="2.0"/>
            <port name="height" type="float" value="2.0"/>
        </node>
        <node name="ellipse2" position="-8.00,21.00" prototype="corevector.ellipse"/>
        <node comment="inportoiwac tylko skonvertowane .dat do .csv z delimiterem &quot; , &quot; i z podanymi nazwami kolumn" name="import_csv1" position="9.00,-16.00" prototype="data.import_csv">
            <port name="file" type="string" value="/home/pab/_PRO/LFS/data/goal_1.csv"/>
        </node>
        <node comment="inportoiwac tylko skonvertowane .dat do .csv z delimiterem &quot; , &quot; i z podanymi nazwami kolumn" name="import_csv2" position="-36.00,-8.00" prototype="data.import_csv">
            <port name="file" type="string" value="/home/pab/_PRO/LFS/data/goal_1.csv"/>
        </node>
        <node name="integer1" position="5.00,9.00" prototype="math.integer"/>
        <node name="integer2" position="-16.00,8.00" prototype="math.integer"/>
        <node name="integer3" position="-21.00,8.00" prototype="math.integer"/>
        <node name="integer4" position="-48.00,11.00" prototype="math.integer"/>
        <node name="line1" position="-18.00,17.00" prototype="corevector.line">
            <port name="point2" type="point" value="0.00,45.00"/>
        </node>
        <node name="line2" position="-36.00,12.00" prototype="corevector.line">
            <port name="point2" type="point" value="0.00,10.00"/>
        </node>
        <node name="log1" position="-14.00,3.00" prototype="math.log"/>
        <node name="lookup_size" position="8.00,3.00" prototype="data.lookup">
            <port name="key" type="string" value="size"/>
        </node>
        <node name="lookup_size1" position="-16.00,-2.00" prototype="data.lookup">
            <port name="key" type="string" value="size"/>
        </node>
        <node name="lookup_time" position="12.00,3.00" prototype="data.lookup">
            <port name="key" type="string" value="time"/>
        </node>
        <node name="lookup_time1" position="-12.00,-2.00" prototype="data.lookup">
            <port name="key" type="string" value="time"/>
        </node>
        <node name="make_point1" position="8.00,9.00" prototype="corevector.make_point"/>
        <node name="make_point2" position="16.00,10.00" prototype="corevector.make_point"/>
        <node name="make_point3" position="-12.00,11.00" prototype="corevector.make_point"/>
        <node name="make_point4" position="-48.00,13.00" prototype="corevector.make_point"/>
        <node name="make_point5" position="-38.00,6.00" prototype="corevector.make_point"/>
        <node name="multiply1" position="8.00,7.00" prototype="math.multiply">
            <port name="value2" type="float" value="2.0"/>
        </node>
        <node name="multiply13" position="-12.00,10.00" prototype="math.multiply">
            <port name="value2" type="float" value="10.0"/>
        </node>
        <node name="multiply14" position="-14.00,5.00" prototype="math.multiply">
            <port name="value2" type="float" value="17.0"/>
        </node>
        <node name="multiply2" position="16.00,6.00" prototype="math.multiply">
            <port name="value2" type="float" value="10.0"/>
        </node>
        <node name="multiply3" position="13.00,6.00" prototype="math.multiply">
            <port name="value2" type="float" value="4.0"/>
        </node>
        <node name="multiply4" position="16.00,8.00" prototype="math.multiply">
            <port name="value2" type="float" value="-1.0"/>
        </node>
        <node name="multiply5" position="18.00,12.00" prototype="math.multiply">
            <port name="value2" type="float" value="0.1"/>
        </node>
        <node name="multiply6" position="22.00,12.00" prototype="math.multiply"/>
        <node name="multiply7" position="-45.00,11.00" prototype="math.multiply">
            <port name="value2" type="float" value="-1.0"/>
        </node>
        <node name="rotate1" position="5.00,13.00" prototype="corevector.rotate">
            <port name="angle" type="float" value="22.566898345947266"/>
        </node>
        <node name="rotate2" position="-21.00,22.00" prototype="corevector.rotate"/>
        <node name="switch1" position="-16.00,7.00" prototype="list.switch"/>
        <node name="take_every1" position="-48.00,8.00" prototype="list.take_every">
            <port name="n" type="int" value="67"/>
        </node>
        <node name="textpath1" position="5.00,12.00" prototype="corevector.textpath">
            <port name="font_size" type="float" value="10.0"/>
            <port name="align" type="string" value="LEFT"/>
            <port name="width" type="float" value="34.0"/>
        </node>
        <node name="textpath2" position="-21.00,21.00" prototype="corevector.textpath">
            <port name="font_size" type="float" value="31.0"/>
            <port name="align" type="string" value="LEFT"/>
            <port name="width" type="float" value="413.0"/>
        </node>
        <node name="translate1" position="5.00,14.00" prototype="corevector.translate"/>
        <node name="translate2" position="-16.00,21.00" prototype="corevector.translate"/>
        <node name="translate3" position="-21.00,25.00" prototype="corevector.translate"/>
        <node name="translate4" position="-21.00,24.00" prototype="corevector.translate">
            <port name="translate" type="point" value="0.00,46.00"/>
        </node>
        <node name="translate5" position="-37.00,13.00" prototype="corevector.translate"/>
        <conn input="textpath1.text" output="integer1"/>
        <conn input="make_point1.x" output="multiply1"/>
        <conn input="multiply1.value1" output="distinct1"/>
        <conn input="integer1.value" output="distinct1"/>
        <conn input="make_point2.x" output="multiply3"/>
        <conn input="make_point2.y" output="multiply4"/>
        <conn input="multiply4.value1" output="multiply2"/>
        <conn input="ellipse1.position" output="make_point2"/>
        <conn input="lookup_size.list" output="import_csv1"/>
        <conn input="distinct1.list" output="lookup_size"/>
        <conn input="multiply3.value1" output="lookup_size"/>
        <conn input="multiply5.value1" output="lookup_size"/>
        <conn input="lookup_time.list" output="import_csv1"/>
        <conn input="multiply2.value1" output="lookup_time"/>
        <conn input="connect1.points" output="make_point1"/>
        <conn input="combine1.list2" output="connect1"/>
        <conn input="combine1.list3" output="ellipse1"/>
        <conn input="rotate1.shape" output="textpath1"/>
        <conn input="translate1.shape" output="rotate1"/>
        <conn input="combine1.list1" output="translate1"/>
        <conn input="translate1.translate" output="make_point1"/>
        <conn input="distinct2.list" output="lookup_size1"/>
        <conn input="rotate2.shape" output="textpath2"/>
        <conn input="make_point3.x" output="multiply13"/>
        <conn input="translate2.translate" output="make_point3"/>
        <conn input="connect3.points" output="make_point3"/>
        <conn input="combine2.list1" output="translate2"/>
        <conn input="combine2.list2" output="connect3"/>
        <conn input="translate2.shape" output="line1"/>
        <conn input="ellipse2.position" output="make_point3"/>
        <conn input="colorize1.shape" output="ellipse2"/>
        <conn input="combine2.list3" output="colorize1"/>
        <conn input="ellipse2.width" output="abs1"/>
        <conn input="ellipse2.height" output="abs1"/>
        <conn input="switch1.input1" output="distinct2"/>
        <conn input="integer2.value" output="switch1"/>
        <conn input="log1.value" output="distinct2"/>
        <conn input="multiply13.value1" output="integer2"/>
        <conn input="multiply14.value1" output="log1"/>
        <conn input="switch1.input2" output="multiply14"/>
        <conn input="combine3.list1" output="translate3"/>
        <conn input="combine3.list2" output="combine2"/>
        <conn input="integer3.value" output="distinct2"/>
        <conn input="textpath2.text" output="integer3"/>
        <conn input="translate4.shape" output="rotate2"/>
        <conn input="translate3.shape" output="translate4"/>
        <conn input="translate3.translate" output="make_point3"/>
        <conn input="make_point4.x" output="integer4"/>
        <conn input="make_point4.y" output="multiply7"/>
        <conn input="connect4.points" output="make_point1"/>
        <conn input="connect2.points" output="make_point4"/>
        <conn input="combine4.list1" output="connect2"/>
        <conn input="ellipse.position" output="make_point4"/>
        <conn input="combine4.list2" output="ellipse"/>
        <conn input="ellipse.width" output="Ellipse_Size"/>
        <conn input="ellipse.height" output="Ellipse_Size"/>
        <conn input="LookUpSize.list" output="take_every1"/>
        <conn input="integer4.value" output="LookUpSize"/>
        <conn input="LookUpTime.list" output="take_every1"/>
        <conn input="multiply7.value1" output="LookUpTime"/>
        <conn input="distinct3.list" output="LookUpSize1"/>
        <conn input="count2.list" output="LookUpTime1"/>
        <conn input="count1.list" output="distinct3"/>
        <conn input="divide1.value1" output="count2"/>
        <conn input="divide1.value2" output="count1"/>
        <conn input="take_every1.n" output="divide1"/>
        <conn input="LookUpTime2.list" output="import_csv2"/>
        <conn input="distinct4.list" output="LookUpSize2"/>
        <conn input="make_point5.x" output="distinct4"/>
        <conn input="connect5.points" output="make_point5"/>
        <conn input="IN_Curve.shape" output="import_csv2"/>
        <conn input="LookUpTime1.list" output="IN_Curve"/>
        <conn input="LookUpSize1.list" output="IN_Curve"/>
        <conn input="take_every1.list" output="IN_Curve"/>
        <conn input="OUT_curve.shape" output="combine4"/>
        <conn input="IN_Wy_Size.shape" output="import_csv2"/>
        <conn input="LookUpSize2.list" output="IN_Wy_Size"/>
        <conn input="translate5.shape" output="line2"/>
        <conn input="combine5.list1" output="connect5"/>
        <conn input="OUT_Wy_Size.shape" output="combine5"/>
        <conn input="combine5.list2" output="translate5"/>
        <conn input="translate5.translate" output="make_point5"/>
        <conn input="combine6.list1" output="OUT_curve"/>
        <conn input="combine6.list2" output="OUT_Wy_Size"/>
    </node>
</ndbx>
